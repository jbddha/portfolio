System Architecture Visualization:

    Initiated the project by developing a detailed network diagram using draw.io. This visual representation outlined the project scope and meticulously illustrated the flow of data across the virtual network infrastructure.
    The diagram, also available as "ActiveDirectoryLab.io," served as a foundational document for the entire project.

Virtual Infrastructure Provisioning:

    Downloaded necessary .iso files for various operating systems, including Windows 10, Windows Server 2022, and Ubuntu 22.04.
    Provisioned three virtual machines utilizing VirtualBox virtualization software.
    Additionally, integrated a pre-built Kali Linux virtual machine into the VirtualBox environment for security testing purposes.

Splunk Server Foundation:

    Started the software installation phase by ensuring seamless network communication and internet access across all virtual machines.
    Established a dedicated NAT Network within VirtualBox to facilitate internal connectivity.
    Prepared the designated Splunk server by disabling DHCP, assigning a static IP address, configuring the default gateway, and specifying the appropriate DNS server through modifications to the .yaml configuration file.
    Leveraged a VirtualBox shared directory to streamline software transfer, downloading the Splunk installer into this shared space.
    Resolved VirtualBox dependency issues to ensure smooth interaction.
    Mounted a host machine directory ("share") to a guest Ubuntu directory ("WindowsActiveDirectory") to facilitate file access.
    Executed the Splunk installer on the designated VM and configured Splunk to automatically start upon system boot.
    Validated the successful installation and initial functionality of the Splunk instance via the web dashboard.
    Rectified an initial inaccessibility issue from the host device by implementing a specific port forwarding rule within VirtualBox.

Telemetry Ingestion Setup:

    Initiated the deployment of Universal Forwarders onto the Active Directory server and the target Windows 10 machine to enable data collection.
    Ensured proper network configuration on the Windows 10 VM, including setting a static IP address, verifying DNS server settings, and confirming the default gateway.
    Procured security tools via browser download, including the Splunk Universal Forwarder, Sysmon (System Monitor), and a recommended Sysmon configuration file.
    Installed and configured Sysmon utilizing the downloaded installer and configuration file for enhanced endpoint monitoring.
    Created a custom inputs.conf file for the Splunk Forwarder on the Windows 10 machine, specifically defining the data sources to be forwarded to the Splunk instance.
    Directed the collected telemetry to a dedicated Splunk index named "endpoint" for organized data management.
    Verified successful data ingestion by confirming the presence of over 6,000 events within the newly created "endpoint" index, originating from the Windows 10 forwarder.
    Replicated the forwarder installation process on the Active Directory Server, ensuring the configuration of the Active Directory server as the deployment server during this step.
    Confirmed successful telemetry reception from both the Windows 10 client and the Active Directory server within the Splunk dashboard.
    Established a static IP address for the Windows Active Directory server to ensure consistent network addressing.

Active Directory Domain Establishment:

    Commenced the installation and configuration of Active Directory Domain Services on the designated server, transforming it into the domain controller.
    Utilized the "Add Roles or Features" wizard within Server Manager, selecting "Active Directory Domain Services" and proceeding through the installation prompts.
    Initiated the Active Directory Domain Services Configuration Wizard to promote the server to a domain controller.
    Defined the domain name with a top-level domain, adhering to the ".anything" convention for internal networks, and named the domain "THESHIRE.LOCAL" for organizational purposes.
    Accepted default settings for most configuration options to suit the immediate lab requirements.
    Verified the domain controller status upon re-login, noting the "THESHIRE" prefix preceding the administrator account.
    Created organizational units (OUs) and user accounts within Active Directory for experimentation, including groups named "Hobbits" and "Wizards," and user accounts "Frodo Baggins (fbaggins)" and "Gandalf TheGrey (gthegrey)" with intentionally simple passwords for testing.
    Successfully completed the initial configuration of the Active Directory Server.

Domain Integration of Client Machine:

    Prepared the Windows 10 machine for domain integration by modifying its computer name properties.
    Accessed "Advanced system settings" and navigated to the computer name tab to initiate domain joining.
    Encountered an initial issue where the agent could not resolve the "THESHIRE.LOCAL" domain.
    Resolved this DNS resolution problem by manually configuring the network adapter settings on the Windows 10 machine, specifically modifying the IPv4 DNS server settings to point to the IP address of the Active Directory domain controller.
    Verified the updated DNS settings by executing ipconfig in the command prompt.
    Successfully joined the Windows 10 machine to the "THESHIRE.LOCAL" domain through the graphical user interface, providing administrator credentials for the domain controller when prompted.
    Observed the system restart following the domain join process.
    Confirmed successful domain integration upon re-login, noting the availability of "Other Users" login options and the presence of the "THESHIRE" domain.
    Successfully logged into the domain using the "fbaggins" user credentials created in Active Directory.

System Validation via Simulated Attack:

    Updated the Kali Linux virtual machine with the latest software packages.
    Downloaded and installed the "crowbar" brute-force attack tool for security testing.
    Enabled Remote Desktop Protocol (RDP) on the target Windows 10 machine for both available Active Directory users.
    Initiated a brute-force attack against the target machine using crowbar with a simple wordlist containing the passwords for the "fbaggins" and "gthegrey" user accounts.
    Successfully identified valid credentials ("fbaggins" and the corresponding password) through the brute-force attack simulation.

Security Event Analysis with Splunk:

    Leveraged the newly established Splunk dashboard to investigate the simulated attack activity on the target device.
    Searched the "endpoint" index for events occurring within the last 24 hours, revealing a significant volume of security-related logs.
    Identified 40 instances of event code 4625, indicative of failed logon attempts and potential brute-forcing activity.
    Further investigation revealed instances of event code 4624, signifying successful account logons, confirming the success of the simulated brute-force attack.
    Concluded that the integrated Splunk SIEM effectively captured and presented the security-relevant data, enabling the detection of malicious activity.

Advanced Telemetry Generation:

    Downloaded the Atomic Red Team attack simulation framework onto the target Windows 10 machine to generate more diverse telemetry for advanced analysis.
    Created a Windows Defender exclusion for the C:/ drive to prevent interference with Atomic Red Team files flagged as potentially malicious.
    Utilized PowerShell with administrative privileges to download and install Atomic Red Team from the GitHub repository.
    Explored the various attack simulation modules within Atomic Red Team and cross-referenced them with the MITRE ATT&CK framework.
    Executed a simulation to create a new local user with administrative privileges, a common persistence technique used by attackers.
    Analyzed the Splunk logs and identified numerous events with event code 4672, which corresponds to the assignment of new special privileges to a logon session, confirming the successful execution of the Atomic Red Team simulation.
    Concluded that the project successfully demonstrated the ability to generate, collect, and analyze security-relevant telemetry using Splunk, paving the way for developing enhanced detection rules and security defenses.
