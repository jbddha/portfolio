#This program is searching a text for valid dates in the dd/mm/yyyy or dd-mm-yyyy format.
#It returns a list of valid dates from a string that is passed to it
#An experiment with regex. It is understood that Python has a date validator but I wanted to write this program for myself
import re
#regex for dates in the dd/mm/yyyy and dd-mm-yyyy format
dateRegex = re.compile(r'''
    (0?[1-9]|[12][0-9]|3[01])   #Day
    (/|-)                       #Seperator
    (0?[1-9]|1[0-2])            #Month
    \2                          #Enforce Same Seperator
    ([1][0-9]{3}|[2][0-9]{3})   #Year
    ''', re.VERBOSE)
#Check if dates are valid
def isValidDate(date):
    validDate = True
    tempDate = dateRegex.search(date)
    if tempDate != None:
        day = int(tempDate.group(1))
        month = int(tempDate.group(3))
        year = int(tempDate.group(4))
        if month in(4, 6, 9, 11) and day > 30:
            validDate = False
        if month == 2:
            isLeapYear = False
            if day >= 30:
                validDate = False
            if year % 4 == 0:
                isLeapYear = True
                if year % 100 == 0:
                    isLeapYear = False
                    if year % 400 == 0:
                        isLeapYear = True
            if day > 28 and not isLeapYear:
                validDate = False
    else:
        validDate = False
    return validDate
#Create list of possible dates from text, return a list of validated and formatted dates
def extractRealDates(text):
    matches = []
    #Extract
    for groups in dateRegex.findall(text):
        fDate = '/'.join([groups[0],groups[2],groups[3]])
        if isValidDate(fDate):
            matches.append(fDate)
    return matches
print(extractRealDates('Some days might be 29/2/2000 and 30-4-2000. 2/29/1900 is not a day, neither is 31-4-1956'))
